sudo: required
git:
  lfs_skip_smudge: true
env:
  global:
  - secure: "NlJgtzSehbSVDHUNG8FaujLQfWNKRDnzfa+IMgzPvDiahdIgx+eQa75pcj0sQrikiVdm2Nf9svkwIGhJkJNLJRvmLmGwzv21PUnyzC0ECihC1/p8OFxc+SF/cHfBG3RdjPKvz6bPK+U+m8Be/T8aYyBw52l7j9ZUeBtATE7ZY/1aYzTfZE5i7OfP2Aw2xPcM+GV+sg7VBjUwew+BQ9XxawhxfgsC9JRiK0pFDvD1CQK1brJlDlm2JoFMn1IxSKGTSEzdwgLXiw3KaHXQMQyEC7Jyqbyhfh06FizRb614OCg2tsG5UjvbH+T1mlOZ0MknxvBSGnwaeGcaDfxsVQdZfY8VdPfa1teGkfbyTSD4BTwJvp8jlJY0ApfBzwia7JIhAIj0m8RlKwo0j5+8CKX5YXu4IswMiFY5OSo9fj/6Ov0AImDIFhDZJz4ItKwnjMecpTaiZTJLt7noeXcdFpWOGI1+uhy3yBHpMZMHp7tofI6IzhJDWrGiAm4Ca0flHNgRhkHArd+QFAuyuHHGuo6OFX7sEvU6y27SU37AkwgK/QfL5mjk96dmWq9P8lE1exu3ARQTAI0axZfujtkHJ9SEyq7V36SG2C0OJCtycdj9LQ2lb4hKrTUu4ffEKhY5X91jo1b3E1NLy2qI3O8k3DKCYeMZu3y9uYFuqu+W+r+0IFs="
services:
- docker
language: python
python: 3.6
before_install:
- echo -e "machine github.com\n  login $GITHUB_TOKEN" >> ~/.netrc
- git lfs pull
- sudo sh -c 'echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" > /etc/apt/sources.list.d/docker.list'
- sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
- sudo apt-get update
- sudo apt-key update
- sudo apt-get --force-yes -qqy -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold"
  install docker-engine=17.05.0~ce-0~ubuntu-trusty
- sudo rm /usr/local/bin/docker-compose
- curl -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname
  -s`-`uname -m` > docker-compose
- chmod +x docker-compose
- sudo mv docker-compose /usr/local/bin
- docker-compose -v
- docker -v
install:
- pip install flake8 pycodestyle
before_script:
- docker-compose -f local.yml build
script:
- flake8 interface
- pycodestyle interface
- flake8 prediction
- pycodestyle prediction
- sh tests/test_docker.sh
deploy:
  # deploy branch to hosted demo
  - provider: script
    script: deploy.sh
    on:
      branch: deploy
after_success:
  - docker --version  # document the version travis is using
  - pip install --user awscli # install aws cli w/o sudo
  - export PATH=$PATH:$HOME/.local/bin # put aws in the path
  - eval $(aws ecr get-login --region us-east-1) #needs AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY envvars
  - docker build -t my_example_app .
  - docker tag my_example_app:latest [your_ecr_account].dkr.ecr.us-east-1.amazonaws.com/my_example_app:latest
  - docker push [your_ecr_account].dkr.ecr.us-east-1.amazonaws.com/my_example_app:latest
notifications:
  webhooks:
  - https://app.fossa.io/hooks/travisci
  - https://webhooks.gitter.im/e/90ccb5b48655747c3e9d
  email: false
  slack:
    rooms:
      secure: d/3HSFNM8Z6+Cs6dyeVn9DyJo9xf+N6BL6MuEksvTo5lrx7xGp/heZzZglyXyOysxmoqTghKBsWKt1GXlRqeMcHciuZIe8tgoYr8/kDPUGiUT8w32AOA13mSaAnDc8szjTGZwGuqIm1qV4Ixwg+hwgO5LATRhnu5N1iWpiXmXanVJ1toBJEWfj6OrlHKgE8hFvhkGD1LvWL4BkeVhH5dMGWtTgQe+dAtqXd/R0YRkV9TbhJsZt2oQR9PKabJqpK5J6aUG2RdB3AIXNyrE6b3dZbGX3GrJIhce7e4e4ORIJn/wEAdejVwL0YllX5j27oZGiXfzbw2zdGLC9K8GQEMOuq92X+vuV+jsO2D8CPOl+fPnsgHq3UkQcFYTtRCk9WQQqDv5QksfvRH/2pI9H4DkW+h/oAmkLiPvg0/E9AH6Q3N9pEFGZnWaGaPG6BcgnXsMn9XwGa4UP/R6btZKEnuoQD73nT8DnjDnsLbz3y3fAA0hyAlYrZ1nF4SA0qvqqC2H2Mae3Lk9FN0MjZHsVrHmOJNyEZHDXhbQmDpHe67YVpeoY4gGPFAHxosszUp5Svkfv8SWyZAcxPsOx+hDaDLgSEFsCtDCnm9X7iT3ksGhubzHCFJI+xe0u/nZ5D3xPemrZQTu+sgqRswvaQa5/naOL1HwQtHq9raOC/KfbbjoAw=
